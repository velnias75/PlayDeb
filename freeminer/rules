#!/usr/bin/make -f

# upstream version
PKD = $(abspath $(dir $(MAKEFILE_LIST)))
PKG = $(shell dpkg-parsechangelog -l$(PKD)/changelog -SSource)
VER = $(shell dpkg-parsechangelog -l$(PKD)/changelog -SVersion | cut -d- -f1)

# parallel building
parallel=$(shell echo $$DEB_BUILD_OPTIONS | grep parallel > /dev/null && echo -j$$(test -f /proc/cpuinfo && cat /proc/cpuinfo | (grep ^processor || echo 1) | wc -l))

# build-hardening flags
export DEB_BUILD_MAINT_OPTIONS="hardening=+all"

# file names
sources=$(shell find . -name *.cpp)
headers=$(shell find . -name *.h)
dfsgremovals=.gitignore \
	     .gitmodules \
	     .gitattributes \
	     build
#	     jthread # upstream patched that lib, which seem dead upstream itself, so use freeminer's version even if I don't like it.
cleanremovals= bin \
	       CMakeFiles \
	       src/CMakeFiles \
	       CMakeCache.txt \
	       CPackConfig.cmake \
	       CPackSourceConfig.cmake \
	       Makefile \
	       cmake_install.cmake \
	       src/Makefile \
	       src/cmake_config.h \
	       src/cmake_install.cmake \
	       locale \
	       install_manifest.txt \
	       freeminer.xpm \
	       freeminer.svg \
	       freeminer.png \
	       src/cguittfont/CMakeFiles/ \
	       src/cguittfont/Makefile \
	       src/cguittfont/cmake_install.cmake \
	       src/cguittfont/libcguittfont.a \
	       src/enet/CMakeFiles \
	       src/msgpack-c/CMakeFiles \
	       src/msgpack-c/libmsgpack.so.4.0.0 \
	       src/msgpack-c/libmsgpack.a \
	       src/jsoncpp/src/lib_json/libjsoncpp.a \
	       src/jsoncpp/src/lib_json/CMakeFiles \
	       src/gmp/libgmp.a \
	       src/gmp/CMakeFiles \
	       src/enet/libenet.a \
	       src/msgpack-c/libmsgpack.so.3 \
	       src/msgpack-c/libmsgpack.so

%:
	dh $@

override_dh_clean:
	dh_clean --exclude old/Makefile.old
	
override_dh_auto_clean:
	dh_clean --exclude old/Makefile.old
	rm -rf ${cleanremovals}

override_dh_auto_configure:
	CFLAGS="${CFLAGS}" \
	    LDFLAGS="${LDFLAGS}" \
	    CXXFLAGS="${CXXFLAGS} ${CPPFLAGS}" \
	    cmake -DRUN_IN_PLACE=0 \
	          -DENABLE_GETTEXT=1 \
		  -DENABLE_FREETYPE=1 \
		  -DENABLE_SYSTEM_JSONCPP=0 \
		  -DFREETYPE_INCLUDE_DIRS=/usr/include/freetype2 \
		  -DFREETYPE_INCLUDE_DIR_ft2build=/usr/include \
		  -DCUSTOM_LOCALEDIR=/usr/share/locale \
		  -DCUSTOM_SHAREDIR=/usr/share/games/freeminer \
		  -DCMAKE_INSTALL_PREFIX=/usr . \
		  -DBINDIR=/usr/games .

override_dh_auto_build:
	make VERBOSE=1 ${parallel}
	
override_dh_install:
	dh_install --list-missing -X.gitignore
	for bpkg in freeminer freeminer-data freeminer-dbg freeminer-server ; do \
	  mkdir -p debian/$${bpkg}/usr/share/doc/$${bpkg} ; \
	  cp debian/changelog.upstream debian/$${bpkg}/usr/share/doc/$${bpkg}/changelog ; \
	done
	# copy the logo
	mkdir -p debian/freeminer/usr/share/icons/hicolor/24x24/apps/
	cp misc/freeminer-24x24.png debian/freeminer/usr/share/icons/hicolor/24x24/apps/freeminer.png
	convert debian/freeminer/usr/share/icons/hicolor/24x24/apps/freeminer.png \
	        debian/freeminer/usr/share/icons/hicolor/24x24/apps/freeminer.xpm
	mkdir -p debian/freeminer/usr/share/icons/hicolor/scalable/apps/
	cp misc/freeminer.svg       debian/freeminer/usr/share/icons/hicolor/scalable/apps/freeminer.svg
	# take care of the fonts we need
	mkdir -p debian/freeminer-data/usr/share/games/freeminer/fonts/
	ln -s /usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf \
	      debian/freeminer-data/usr/share/games/freeminer/fonts/liberationmono.ttf
	ln -s /usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf \
	      debian/freeminer-data/usr/share/games/freeminer/fonts/liberationsans.ttf
	# Install the mapper script
	mkdir -p debian/freeminer-data/usr/games
	cp util/minetestmapper.py debian/freeminer-data/usr/games/minetest-mapper
	cp util/colors.txt        debian/freeminer-data/usr/share/games/freeminer/minetestmapper-colors.txt

override_dh_strip:
	dh_strip --dbg-package=freeminer-dbg

## http://wiki.debian.org/onlyjob/get-orig-source
.PHONY: get-orig-source
get-orig-source: $(PKG)_$(VER).orig.tar.xz $(info I: $(PKG)_$(VER))
	@

## checkout from git (add "git" to Build-Depends)
UURL = git://github.com/freeminer/freeminer.git
$(PKG)_$(VER).orig.tar.xz: $(info I: $(PKG)_$(VER))
	$(if $(wildcard $(PKG)-$(VER)),$(error $(PKG)-$(VER) exist, aborting..))
	@echo "# Downloading..."
	git clone $(UURL) $(PKG)-$(VER) \
	|| $(RM) -r $(PKG)-$(VER)
	cd $(PKG)-$(VER) \
	&& git checkout $(VER) && git submodule init && git submodule update \
	&& [ -s ChangeLog ] || ( echo "# Generating ChangeLog..." \
	   ; git log --pretty="format:%ad  %aN  <%aE>%n%n%x09* %s%n" --date=short > ChangeLog \
	   ; touch -d "$$(git log -1 --format='%ci')" ChangeLog) \
	&& echo "# Setting times..." \
	&& git ls-tree -r --name-only HEAD | while read F ; do touch --no-dereference -d "$$(git log -1 --format="%ai" -- "$$F")" "$$F"; done \
	&& echo "# Cleaning-up..." \
	&& for file in ${dfsgremovals}; do \
	        find . -name $$file -execdir rm -rf {} \; 2>/dev/null || true; \
	        done \
	&& $(RM) -r .git .git* && ( find . -name ".git*" -type d -exec rm -rf {} \; || /bin/true ) \
	&& find . -name ".git" -type f -delete
	@echo "# Packing..."
	find -L "$(PKG)-$(VER)" -xdev -type f -print | LC_ALL=C sort \
	| XZ_OPT="-6v" tar -caf "$(PKG)_$(VER).orig.tar.xz" -T- --owner=root --group=root --mode=a+rX \
	&& $(RM) -r "$(PKG)-$(VER)"

